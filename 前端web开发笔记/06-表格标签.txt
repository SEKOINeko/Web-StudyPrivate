1.1 表格的主要作用
表格主要用于显示,展示数据,因为它可以让数据显示的非常的规整,可读性非常好. 用于展示数据.

1.2 表格的基本语法

 1.<table></table>标签用于定义表格
 2.<tr></tr>标签用于定义表格中的行,必须在<table></table>标签中
 3.<td></td>用于定义表格中的单元格,必须在<tr></tr>标签中
 4. td为table data的缩写(表格数据),代表单元格的内容

1.3 表格单元头的基本语法

一般表头单元格位于表格的第一行或第一列,表头单元格里面的文本内容加粗居中表示
<th>标签表示HTML表格的表头部分(table head的缩写)
表头单元格也是单元格(td)

1.4表格属性
这部分不常用,后期用css设置.

align 属性值:left,center,right 规定表格相对周围元素的对齐方式
border 属性值:1 或 ""  规定表格单元格是否拥有边框,默认为"",表示没有边框
cellpadding 像素值 规定单元边沿与其内容之间的空白,默认为1像素
cellspacing 像素值 规定单元格之间的空白,默认为1像素
width 像素值或百分比 规定表格的宽度

要写到表格标签<table>里面

1.5 表格结构标签

在表格过长的时候,更好表示表格的语义,将表格分割成表格头部和表格主体两大部分

分别用<thead>表示 表格的头部区域,必须包含<tr>标签,一般位于第一行 <tbody>标签 表示表格的主体区域,主要用于存放数据本体

1.6 合并单元格
将多个单元格合并为一个单元格

 1.方式
跨行合并:rowspan="合并单元格个数"上下为跨行 row为行的英文
跨列合并:colspan="合并单元格个数"左右为跨列 col为column 行 的缩写英文

 2.目标单元格

跨行:最上侧单元格
跨列:最左侧单元格

 3.步骤:
 <1.确定是跨行还是跨列
 <2.找到目标单元格,写上合并方式如:<td colspan="2"></td>
 <3.删除多余的单元格

1.7 表格总结
标签总结:

table表 tr行 td单元格  th表头单元格 thead表头区 tbody表主体区
align border cellpadding cellspacing width height
rowspan colspan

2. 列表标签 
表格用于显示数据,列表用于布局
特点:整齐 整洁 有序 布局更自由和方便
三大类:有序列表 无序列表 自定义列表

2.1 无序列表(儿子们跟父亲)
<ul>标签(unordered list)表示无序列表,一般以项目符号呈现列表项,而列表项使用<li>标签定义
基本语法:
<ul>
	<li>列表项</li>
	<li>列表项</li>
	<li>列表项</li>
	<li>列表项</li>
	...
</ul>
特点:各个列表项之间无顺序之分,为并列关系
       <ul></ul>中只能嵌套<li></li>,输入其他标签和文字是不被允许的
      <li></li>相当于一个容器,可以容纳任何元素
     无序列表带有自己的样式属性,后面通过CSS来设置

2.2 有序列表
<ol></ol>为标签 <li></li>来定义列表项,列表顺序以数字来表示
基本语法:
<ol>
	<li>列表项</li>
	<li>列表项</li>
	<li>列表项</li>
	<li>列表项</li>
	...
</ol>
特点同无序列表

2.3 自定义列表(小弟们跟大哥)
使用场景:常用于对术语或名词进行解释和描述,定义列表的列表项前没有任何项目符号
<dl></dl>(definition list)标签定义自定义列表  <dt>(定义项目/名字 definition term) <dd>(描述每一个项目/名字 definition description)
基本语法:
<dl>
	<dt>名词1</dt>
		<dd>名词1解释</dd>
		<dd>名词1解释</dd>
		<dd>名词1解释</dd>
</dl>
特点:
dl标签里只能包含dt,dd标签,不允许其他标签出现.

2.4 列表总结
无序列表<ul> unordered list 大部分使用
有序列表<ol> ordered list 选择使用
自定义列表 <dl> definition list   <dt> <dd> 组名与组员有对应关系,组员负责解释组名

3 表单标签
3.1
目的:收集用户信息(实现一定的交互效果)

3.2 表单的组成
一个完整的表单通常由 表单域,表单控件(也称为表单元素)和提示信息 3个部分构成
表单域:包含表单所有的内容
表单控件:控件操作用户选择,填写以及其它方式的位置
提示信息:提示用户该控件处如何选择或填写等
3.3 表单域
是一个包含表单元素的区域
<form>标签用于定义表单域,会把它范围内的表单元素信息交给服务器.
基本语法:
<form action="url地址"method="提交方式" name="表单域名称">
	各种表单元素控件
</form>

action 指定url地址
method 属性值: get/post 提交方式取值有两种 get/post
name 名称 用于指定表单的名称,以区分同一个页面中的多个表单域.

3.4 表单控件(表单元素)
允许用户在表单中输入或者选择的内容控件
 1.input 输入表单元素
	input:输入表单元素,用于收集用户信息
包含一个type属性,根据不同的type属性值,输入字段拥有多种形式
语法: <input type="属性值" />
<input />标签为单标签
type的取值:
button 可点击的按钮(大多数情况通过Javascript启动脚本)
checkbox 定义复选框
file 定义输入的字段和"浏览"按钮,供文件上传.
hidden 定义隐藏的输入字段.
image 定义图像形式的提交按钮.
password 定义密码字段,该字段中的字符被掩码.
radio 定义单选按钮
reset 定义重置按钮,重置按钮会清除表单中的所有数据
submit 定义提交按钮,提交按钮会把表单数据发送到服务器.
text 定义单行的输入字段,用户可在其中输入文本,默认宽度为20个字符.

input中name与value属性:
单选框添加name才能实现单选 单选框和复选按钮一定要有相同的name值
name 由用户自定义 定义input元素的名称
value  由用户自定义 规定input元素的值 后台人员可以查看选择值
checked checked 规定此input元素首次加载时应当被选中.
maxlength 正整数 规定输入字段中的字符的最大长度.
 
 2.<label> 标签
定义为input的标注标签
label标签可以绑定一个表单元素,当点击<label>标签内的文件时,浏览器会自动将焦点(光标)转到或者选择对应的表单元素上,用来增加用户体验.
语法:
	<label for="sex">男</label>
	<input type="radio" name="sex" id="sex" />
即 <label>标签的for属性应当与相关元素的id属性相同.

 3.select下拉表单元素
有多个选项让用户选择,并且想要节约页面空间
语法:
<form>
<select>
	<option>选项</option>
<option>选项</option>
<option>选项</option>
<option>选项</option>
<option>选项</option>
<option>选项</option>
<option>选项</option>

</select>
</form>
若<option selected="selected"> 则该选项被默认选中

 4.textarea文本域元素
大量输入内容时,可以用<textarea>标签控件(如留言板,评论等)
基本语句:
<textarea rows="3" cols="20">
 	文本内容
</textarea>

cols:每行的字符数 rows:显示的行数(用CSS来设置)